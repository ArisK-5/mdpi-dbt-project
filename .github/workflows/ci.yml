name: CI

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch: {} # manual trigger to run on demand

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: SQLFluff + dbt parse
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DBT_PROFILES_DIR: ${{ github.workspace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install "sqlfluff~=3.4" "sqlfluff-templater-dbt~=3.4.2" "dbt-duckdb~=1.9.4"

      - name: Install dbt packages
        run: dbt deps

      - name: Lint SQL with SQLFluff (dbt templater)
        run: sqlfluff lint models --format github-annotation

      - name: Parse dbt project (syntax/render checks)
        run: dbt parse --target lint

  build-pr:
    name: dbt build on ephemeral Postgres (PRs)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: lint
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
    env:
      DBT_PROFILES_DIR: ${{ github.workspace }}
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_SCHEMA: ci_${{ github.run_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install "dbt-postgres~=1.9.0"

      - name: Install dbt packages
        run: dbt deps

      - name: Debug connection (no network outside service)
        run: dbt debug

      - name: Seed + Build + Test
        run: |
          dbt seed --fail-fast
          dbt build --fail-fast

      - name: Generate docs
        run: dbt docs generate
